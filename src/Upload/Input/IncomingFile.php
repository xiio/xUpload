<?php/** * Created by PhpStorm. * User: Tomasz * Date: 2016-03-04 * Time: 18:38 */namespace xiio\xUpload\Upload\Input;use xiio\xUpload\Abstraction\File;use xiio\xUpload\Upload\Abstraction\IncomingFileInterface;class IncomingFile implements IncomingFileInterface, File{    private $name;    private $path;    private $extension;    private $mimetype;    /**     * File constructor.     *     * @param $name     * @param $path     */    public function __construct($name, $path)    {        $this->name = $name;        $this->path = $path;    }    public function getExtension()    {        if ($this->extension === null) {            $this->extension = pathinfo($this->path, PATHINFO_EXTENSION);        }        return $this->extension;    }    /**     * Get mime type of a file     * @return mixed     */    public function getMimeType()    {        if ($this->mimetype === null) {            //$_FILES[xxx]['mime_type'] could be spoofed!            $finfo = finfo_open(FILEINFO_MIME_TYPE);            $this->mimetype = finfo_file($finfo, $this->path);            finfo_close($finfo);        }        return $this->mimetype;    }    public function getSize()    {        return filesize($this->path);    }    /**     * @return mixed     */    public function getName()    {        return $this->name;    }    /**     * @return mixed     */    public function getPath()    {        return $this->path;    }    /**     * Check if file is really uploaded     * @return bool     */    public function isUploaded()    {        return is_uploaded_file($this->path);    }}